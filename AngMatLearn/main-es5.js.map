{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/home/dialog-content-example-dialog.html","webpack:///src/app/home/bottom-sheet-overview-example-sheet.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","useHash","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","provide","useValue","floatLabel","schemas","declarations","entryComponents","providers","bootstrap","MyErrorStateMatcher","control","form","isSubmitted","submitted","invalid","dirty","touched","ELEMENT_DATA","position","name","symbol","percentage","HomeComponent","dialog","_bottomSheet","showFiller","hide","loading","dashboard","profile","table","showradio","options","myControl","displayedColumns","dataSource","emailFormControl","required","email","matcher","filteredOptions","valueChanges","pipe","value","_filter","filterValue","toLowerCase","filter","option","includes","open","BottomSheetOverviewExampleSheet","setTimeout","dialogRef","DialogContentExampleDialog","afterClosed","subscribe","result","arg0","showdashboard","showprofile","showtable","openBottomSheet","shownotifications","_bottomSheetRef","event","dismiss","preventDefault","openLink","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule, Component } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\n\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: HomeComponent\n  },\n    {\n    path: \"home\",\n    component: HomeComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes,{ useHash: true })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n  \n }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'AngMatLearn';\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA } from '@angular/core';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { CdkTreeModule } from '@angular/cdk/tree';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatFormFieldModule, MAT_FORM_FIELD_DEFAULT_OPTIONS} from '@angular/material/form-field';\nimport { MatButtonModule} from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { MatAutocompleteModule} from '@angular/material/autocomplete';\nimport { MatRadioModule } from '@angular/material/radio';\n\n\n\n\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nimport { MatListModule } from '@angular/material/list';\n\n\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatStepperModule } from '@angular/material/stepper';\n\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { MatRippleModule } from '@angular/material/core';\n\nimport * as CanvasJS from '../assets/js/canvasjs.min';\n\nimport { HomeComponent, DialogContentExampleDialog,BottomSheetOverviewExampleSheet } from './home/home.component';\n\nimport { Observable } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\n\n\n\n@NgModule({\n  schemas: [\n    CUSTOM_ELEMENTS_SCHEMA,\n    NO_ERRORS_SCHEMA\n  ],\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    DialogContentExampleDialog,\n    BottomSheetOverviewExampleSheet\n  \n  ],\n  entryComponents: [\n    DialogContentExampleDialog,\n    BottomSheetOverviewExampleSheet\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    MatSliderModule,\n    MatFormFieldModule,\n    MatButtonModule, \n    MatInputModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    MatNativeDateModule,\n    ReactiveFormsModule,\n    MatSelectModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatFormFieldModule,\n    MatButtonModule,\n    MatCardModule,\n    MatMenuModule,\n    MatIconModule,\n    MatInputModule,\n    MatTabsModule,\n    MatDialogModule,\n    MatRadioModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatRippleModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n  \n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatStepperModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    \n  \n    \n   \n  ],\n \n  providers: [{ provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { floatLabel: 'always' } }],\n  bootstrap: [AppComponent,\n   \n  ],\n \n})\nexport class AppModule { }\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\n\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { timer } from 'rxjs';\nimport {  FormGroupDirective, NgForm } from '@angular/forms';\nimport { ErrorStateMatcher } from '@angular/material/core';\nimport { MatBottomSheet, MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\n/*import { ChartType } from 'chart.js';\nimport { MultiDataSet, Label } from 'ng2-charts';*/\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n \n  symbol: string;\n  percentage: number;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  { position: 1, name: 'Nested views', symbol: 'Done', percentage : 100 },\n  { position: 2, name: 'Table component', symbol: 'Feedback', percentage: 70  },\n  { position: 3, name: 'Dashboard tiles',  symbol: 'Feedback', percentage: 75  },\n  { position: 4, name: 'Panel widget',  symbol: 'Done', percentage: 100 },\n  { position: 5, name: 'Form',  symbol: 'In progress', percentage: 90},\n  { position: 6, name: 'Custom CSS', symbol: 'ToDo', percentage: 50 },\n  { position: 7, name: 'Add backend',symbol: 'Feedback', percentage: 60 },\n  { position: 8, name: 'Layout with sidebar', symbol: 'Done', percentage: 100 },\n  { position: 9, name: 'Jquery', symbol: 'On progress', percentage: 80},\n  { position: 10, name: 'Angular Materials',  symbol: 'Done', percentage: 100},\n];\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n  showFiller = false;\n  hide=false;\n  name: string;\n  loading=false;\n  dashboard=true;\n  profile = false;\n  table=false;\n  selected;\n  showradio=false;\nChart;\n /* doughnutChartLabels: Label[] = ['BMW', 'Ford', 'Tesla'];\n  doughnutChartData: MultiDataSet = [\n    [55, 25, 20]\n  ];\n  doughnutChartType: ChartType = 'doughnut';\n  public pieColor: Color[] = [\n    { backgroundColor: 'red' },\n    { backgroundColor: 'green' },\n    { backgroundColor: 'blue' }\n  ]*/\n\n  options: string[] = ['Angular', 'React', 'Vue', 'Javascript', 'Jquery', 'Phython'];\n\nmyControl = new FormControl();\nfilteredOptions : Observable<string[]>;\n\n\n  displayedColumns: string[] = ['position', 'name', 'symbol','percentage'];\n  dataSource = ELEMENT_DATA;\n\n\n  emailFormControl = new FormControl('', [\n    Validators.required,\n    Validators.email,\n  ]);\n\n  matcher = new MyErrorStateMatcher();\n  constructor(public dialog: MatDialog, private _bottomSheet: MatBottomSheet) { \n  }\n\n  ngOnInit(): void {\n    this.filteredOptions = this.myControl.valueChanges.pipe(\n      startWith(''),\n      map(value => this._filter(value))\n    );\n\n   /* let chart = new Chart(\"chartContainer\", {\n      theme: \"light2\",\n      animationEnabled: true,\n      exportEnabled: true,\n      title: {\n        text: \"Monthly Expense\"\n      },\n      data: [{\n        type: \"pie\",\n        showInLegend: true,\n        toolTipContent: \"<b>{name}</b>: ${y} (#percent%)\",\n        indexLabel: \"{name} - #percent%\",\n        dataPoints: [\n          { y: 450, name: \"Food\" },\n          { y: 120, name: \"Insurance\" },\n          { y: 300, name: \"Traveling\" },\n          { y: 800, name: \"Housing\" },\n          { y: 150, name: \"Education\" },\n          { y: 150, name: \"Shopping\" },\n          { y: 250, name: \"Others\" }\n        ]\n      }]\n    });\n\n    chart.render();*/\n  \n  }\n\n  private _filter(value:string) : string[]{\n    const filterValue = value.toLowerCase();\n    return this.options.filter(option=>\n      option.toLowerCase().includes(filterValue)\n      );\n  }\n  openBottomSheet(): void {\n    this._bottomSheet.open(BottomSheetOverviewExampleSheet);\n  }\n  \n \n  shownotifications(){\n    this.hide = !this.hide;\n  }\n\n  openDialog() {\n\n    this.loading = true;\n\n    setTimeout(() => {\n      \n      //your task after delay.\n      this.loading = false;\n      const dialogRef = this.dialog.open(DialogContentExampleDialog);\n      dialogRef.afterClosed().subscribe(result => {\n      });\n     \n    }, 4000);\n   \n  }\n  delay(arg0: number) {\n    throw new Error(\"Method not implemented.\");\n  }\n \n  showdashboard(){\n    this.dashboard=true;\n    this.profile = false;\n    this.table = false;\n  }\n\n  showprofile(){\n    this.profile = true;\n    this.dashboard = false;\n    this.table = false;\n  }\n\n  showtable(){\n    this.table = true;\n    this.dashboard = false;\n    this.profile = false;\n  }\n\n  showradiobutton() {\n    this.showradio = !this.showradio;\n  }\n  }\n\n\n@Component({\n  selector: 'dialog-content-example-dialog',\n  templateUrl: 'dialog-content-example-dialog.html',\n})\nexport class DialogContentExampleDialog { }\n\n\n@Component({\n  selector: 'bottom-sheet-overview-example-sheet',\n  templateUrl: 'bottom-sheet-overview-example-sheet.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class BottomSheetOverviewExampleSheet {\n  constructor(private _bottomSheetRef: MatBottomSheetRef<BottomSheetOverviewExampleSheet>) { }\n\n  openLink(event: MouseEvent): void {\n    this._bottomSheetRef.dismiss();\n    event.preventDefault();\n  }\n}\n  \n\n","<mat-drawer-container class=\"example-container\" autosize>\n  <mat-drawer #drawer class=\"example-sidenav\" mode=\"side\" opened>\n    <mat-toolbar>AMD</mat-toolbar>\n  <mat-list>\n  <a href=\"localhost:4200\">\n    <div class=\"list\" (click)=\"showdashboard()\">\n      <div>\n        <mat-list-item >\n          <mat-icon>dashboard</mat-icon>\n     </mat-list-item>\n     </div>\n     <div class=\"text\"> dashboard </div>\n     </div>\n     </a>\n      <mat-divider></mat-divider>\n    <a href=\"localhost:4200\">\n      <div class=\"list\" (click)=\"showprofile()\">\n      <div>\n        <mat-list-item >\n          <mat-icon>person</mat-icon>\n        </mat-list-item>\n      </div>\n     \n      <div class=\"text\"> Profile </div>\n    </div>\n    </a>\n    <mat-divider></mat-divider>\n\n    <a href=\"localhost:4200\">\n    <div class=\"list\" (click)=\"showtable()\">\n      <div>\n        <mat-list-item >\n          <mat-icon>table_view</mat-icon>\n        </mat-list-item>\n      </div>\n    \n      <div class=\"text\"> Table </div>\n    </div>\n    </a>\n      <mat-divider></mat-divider>\n    <div class=\"list1\" (click)=\"openBottomSheet()\">\n      <div>\n        <mat-list-item>\n         Action\n        </mat-list-item>\n      </div>\n    </div>\n  \n  </mat-list>\n  </mat-drawer>\n\n  <div class=\"example-sidenav-content\">\n  <!--  <button type=\"button\" mat-button (click)=\"drawer.toggle()\">\n    <mat-icon>keyboard_arrow_right</mat-icon>\n     \n    </button>-->\n\n  <mat-toolbar color=\"primary\">\n    <mat-toolbar-row>\n      <span></span>\n      <span class=\"example-spacer\"></span>\n      <button mat-icon-button class=\"example-icon\" aria-label=\"Example icon-button with menu icon\">\n        <mat-icon>search</mat-icon>\n      \n      </button>\n        <button mat-icon-button class=\"example-icon\"  aria-label=\"Example icon-button with menu icon\" (click)=\"shownotifications()\">\n         <mat-icon matBadge=\"5\" >notifications</mat-icon>\n      \n        </button>\n       \n          <button mat-icon-button class=\"example-icon\" aria-label=\"Example icon-button with menu icon\">\n            <mat-icon>menu</mat-icon>\n          </button>\n    </mat-toolbar-row>\n  \n     <div class=\"notification\" *ngIf=\"hide\">\n       <p class=\"para\">You have a Email</p>\n        <p class=\"para\">You have a meeting</p>\n        <p class=\"para\">You have a missed call</p>\n        <p class=\"para\">You have a message</p>\n        <p class=\"para\">You have a notification</p>\n     </div>\n  </mat-toolbar>\n\n<div class=\"container\">\n  <div class=\"dashboard\" *ngIf=\"dashboard\">\n  <mat-grid-list cols=\"3\" rowHeight=\"320\" [gutterSize]=\"'15px'\">\n    <mat-grid-tile>\n   <mat-toolbar>Site Visitors</mat-toolbar>\n <!--<div id=\"chartContainer\" style=\"height: 370px; width: 100%; margin-left:auto;margin-right:auto;\"></div>\n   <div class=\"chart-wrapper\">\n     <canvas baseChart [data]=\"doughnutChartData\" [labels]=\"doughnutChartLabels\" [colors]=\"pieColor\n    [chartType]=\" doughnutChartType\">\n     </canvas>\n   </div>-->\n      </mat-grid-tile>\n   \n    <mat-grid-tile><mat-toolbar>Warnings</mat-toolbar></mat-grid-tile>\n    <mat-grid-tile><mat-toolbar>Memory load</mat-toolbar></mat-grid-tile>\n      <mat-grid-tile>\n\n        <div class=\"section\">\n      <mat-toolbar>Server Control Panel</mat-toolbar>\n\n<div class=\"para4\" *ngIf=\"loading\">\n  <div class=\"line1 line2\"></div>\n</div>\n      \n     <mat-radio-group aria-label=\"Select an option\">\n        <mat-radio-button value=\"1\">Option 1</mat-radio-button><br>\n        <mat-radio-button value=\"2\">Option 2</mat-radio-button>\n      </mat-radio-group>\n        \n      </div>\n      <div class=\"button\">\n      <button mat-raised-button color=\"warn\" (click)=\"openDialog()\">Reload Server</button>\n      </div>\n      \n      </mat-grid-tile>\n        <mat-grid-tile><mat-toolbar>Usage Stats</mat-toolbar></mat-grid-tile>\n          <mat-grid-tile>\n            <div class=\"headicon\">\n              <div class=\"head\">\n                <mat-toolbar>Autocomplete Input</mat-toolbar>\n              </div>\n              <div class=\"icon\">\n                <mat-icon (click)=\"showradiobutton()\">more_vert</mat-icon>\n              </div>\n            </div>\n <mat-radio-group aria-label=\"Select an option\" *ngIf=\"showradio\">\n   <mat-radio-button value=\"1\">Option 1</mat-radio-button><br>\n   <mat-radio-button value=\"2\">Option 2</mat-radio-button>\n </mat-radio-group>\n\n<div class=\"autocomplete\">\n<form>\n  <mat-form-field class=\"example-full-width\">\n    <input type=\"text\" matInput [matAutocomplete]=\"auto\" [formControl]=\"myControl\" [(ngModel)]=\"selected\"/>\n<mat-autocomplete #auto=\"matAutocomplete\" >\n  <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option\">\n    {{option}}\n    \n  </mat-option>\n</mat-autocomplete>\n<br>\n\n  </mat-form-field>\n</form>\n         <p>You selected :<b> {{selected}}</b></p>\n         </div>\n          </mat-grid-tile>\n  </mat-grid-list>\n\n <!--<mat-grid-list cols=\"2\" rowHeight=\"320\" [gutterSize]=\"'15px'\" class=\"grid2\">\n    <mat-grid-tile><mat-toolbar>Performance</mat-toolbar></mat-grid-tile>\n    <mat-grid-tile><mat-toolbar>TODO List</mat-toolbar></mat-grid-tile>\n   \n  </mat-grid-list>-->\n\n\n   </div>\n\n\n<div class=\"profile\" *ngIf=\"profile\">\n \n  <mat-toolbar>\n <form class=\"example-form\">\n   <mat-form-field class=\"example-full-width\">\n     <mat-label>User name</mat-label>\n     <input matInput value=\"Admin\">\n   </mat-form-field>\n&nbsp;\n  <mat-form-field class=\"example-full-width\">\n    <mat-label>Email</mat-label>\n    <input matInput [formControl]=\"emailFormControl\" [errorStateMatcher]=\"matcher\" value=\"contact@flatlogic.com\">\n    <mat-hint>Errors appear instantly!</mat-hint>\n    <mat-error *ngIf=\"emailFormControl.hasError('email') && !emailFormControl.hasError('required')\">\n      Please enter a valid email address\n    </mat-error>\n    <mat-error *ngIf=\"emailFormControl.hasError('required')\">\n      Email is <strong>required</strong>\n    </mat-error>\n  </mat-form-field>\n </form>\n  </mat-toolbar>\n<br>\n   <mat-form-field class=\"example-full-width\">\n     <mat-label>Company (disabled)</mat-label>\n     <input matInput disabled value=\"Google\">\n   </mat-form-field>\n\n   <mat-form-field >\n     <mat-label>Choose a date</mat-label>\n     <input matInput [matDatepicker]=\"picker\" placeholder=\"mm/dd/yy\">\n     <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n     <mat-datepicker #picker></mat-datepicker>\n   </mat-form-field>\n\n\n    <table class=\"example-full-width\" cellspacing=\"0\">\n      <tr>\n        <td>\n          <mat-form-field class=\"example-full-width\">\n            <mat-label>First name</mat-label>\n            <input matInput>\n          </mat-form-field>\n        </td>\n        <td>\n          <mat-form-field class=\"example-full-width\">\n            <mat-label>Long Last Name That Will Be Truncated</mat-label>\n            <input matInput>\n          </mat-form-field>\n        </td>\n      </tr>\n    </table>\n\n    <p>\n      <mat-form-field class=\"example-full-width\">\n        <mat-label>Address</mat-label>\n        <textarea matInput placeholder=\"Ex. 100 Main St\">1600 Amphitheatre Pkwy</textarea>\n      </mat-form-field>\n     \n    </p>\n\n    <table class=\"example-full-width\" cellspacing=\"0\">\n      <tr>\n        <td>\n          <mat-form-field class=\"example-full-width\">\n            <mat-label>City</mat-label>\n            <input matInput placeholder=\"Ex. San Francisco\">\n          </mat-form-field>\n        </td>\n        <td>\n          <mat-form-field class=\"example-full-width\">\n            <mat-label>State</mat-label>\n            <input matInput placeholder=\"Ex. California\">\n          </mat-form-field>\n        </td>\n        <td>\n          <mat-form-field class=\"example-full-width\">\n            <mat-label>Postal Code</mat-label>\n            <input matInput #postalCode maxlength=\"6\" placeholder=\"Ex. 941054\" value=\"940435\">\n            <mat-hint align=\"end\">{{postalCode.value.length}} / 6</mat-hint>\n          </mat-form-field>\n        </td>\n      </tr>\n    </table>\n\n     <p>\n       <mat-form-field>\n         <mat-label>About Us</mat-label>\n         <textarea matInput placeholder=\"Ex. 100 Main St\" class=\"area\">We are young and ambitious full service design and technology company. Our focus is JavaScript development and User Interface design.\n</textarea>\n       </mat-form-field>\n\n     </p>\n</div>\n\n\n</div>\n\n<div class=\"table\" *ngIf=\"table\">\n\n  <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n    <!--- Note that these columns can be defined in any order.\n        The actual rendered columns are set as a property on the row definition\" -->\n\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"position\">\n      <th mat-header-cell *matHeaderCellDef> No. </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef> Issue </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n    </ng-container>\n\n    <!-- Weight Column -->\n    \n\n    <!-- Symbol Column -->\n    <ng-container matColumnDef=\"symbol\">\n      <th mat-header-cell *matHeaderCellDef> Status </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\n    </ng-container>\n\n     <ng-container matColumnDef=\"percentage\">\n       <th mat-header-cell *matHeaderCellDef> percentage </th>\n       <td mat-cell *matCellDef=\"let element\"> {{element.percentage}}% </td>\n     </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\" class=\"tabhead\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n\n\n</div>\n\n\n</div>\n</mat-drawer-container>","<mat-dialog-content class=\"mat-typography\">\r\n  <h2>Reloading done !</h2>\r\n  <p>Production server reloaded</p>\r\n</mat-dialog-content>\r\n<mat-dialog-actions align=\"end\">\r\n  <button mat-button mat-dialog-close>Cancel</button>","<mat-list class=\"bottomsheet\">\r\n    <p>Selcet Action</p>\r\n     <p (click)=\"openLink($event)\">\r\n         <mat-icon>share</mat-icon>Share</p>\r\n     <mat-divider></mat-divider>\r\n      <p (click)=\"openLink($event)\">\r\n        <mat-icon>star_rate</mat-icon>Star\r\n      </p>\r\n</mat-list>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}